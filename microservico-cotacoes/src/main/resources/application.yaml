spring:
  config:
    import: "optional:file:.env.properties"

  datasource:
    url: ${DATABASE_URL}
  jpa:
    hibernate:
      ddl-auto: validate

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

    consumer:
      auto-offset-reset: earliest
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        # maybe its better to deserialize manually with object mapper, because this simply doesnt work for more than one type
        spring.json.value.default.type: org.contoso.cotacoes.domain.dto.AtualizarCotacaoRequest
        spring.json.trusted.packages: "*"
    admin:
      auto-create: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

server:
  servlet:
    context-path: /cotacoes
  port: ${SERVER_PORT:8080}